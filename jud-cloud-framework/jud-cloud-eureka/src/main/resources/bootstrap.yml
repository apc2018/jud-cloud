# 指定注册中心服务端口
server:
  port: 9000
#  给注册中心添加用户名和密码
#  <dependency>
#  <groupId>org.springframework.boot</groupId>
#  <artifactId>spring-boot-starter-security</artifactId>
#  </dependency>
#
#  2.在application.properties加入认证的用户名和密
#  security.user.name=你的用户名
#  security.user.password=你的密码
#
#  3.在访问路径上加入用户名密码
#  eureka.client.serviceUrl.defaultZone=http://${security.user.name}:${security.user.password}@127.0.0.1:${server.port}/eureka/
spring:
  security:
    user:
      name: admin
      password: 123456
  application:
    name: @artifactId@
  cloud:
    config:
      enabled: false

#  默认情况下，Eureka 使用 hostname 进行服务注册，以及服务信息的显示，那如果我们使用 IP 地址的方式，
#  就是eureka.instance.prefer-ip-address=true。
#  目的：我们配置eureka.instance.prefer-ip-address=true来保证 Eureka Server
#  相互注册时 hostname 使用 IP 地址，同时使用 IP 地址作为eureka.client.service-url.defaultZone的配置值。
eureka:
  instance:
    hostname: jud-cloud-eureka
    prefer-ip-address: true
  client:
    # 表示是否注册自身到eureka服务器
    register-with-eureka: false
    # 是否从eureka上获取注册信息
    fetch-registry: false
    service-url:
      defaultZone: http://admin:123456@${eureka.instance.hostname}:${server.port}/eureka/
  server:
    eviction-interval-timer-in-ms: 4000
    enable-self-preservation: false
    renewal-percent-threshold: 0.9

#  在 application.properties 文件中配置actuator的相关配置，
#  其中info开头的属性，就是访问info端点中显示的相关内容，
#  值得注意的是Spring Boot2.x中，默认只开放了info、health两个端点，
#  剩余的需要自己通过配置management.endpoints.web.exposure.include属性来加载（有include自然就有exclude，不做详细概述了）。
#  如果想单独操作某个端点可以使用management.endpoint.端点.enabled属性进行启用或禁用
management:
  endpoints:
    web:
      exposure:
        include: '*'
