# 加解密根密码
jasypt:
  encryptor:
    password: jud #根密码
# redis 相关
spring:
  redis:
    password: 123456
    host: jud-cloud-redis

# 暴露监控端点
management:
  endpoints:
    web:
      exposure:
        include: '*'

# feign 配置
feign:
  hystrix:
    enabled: true
  okhttp:
    enabled: true
  httpclient:
    enabled: false
  client:
    config:
      default:
        connectTimeout: 10000
        readTimeout: 10000
  compression:
    request:
      enabled: true
    response:
      enabled: true
# hystrix If you need to use ThreadLocal bound variables in your RequestInterceptor`s
# you will need to either set the thread isolation strategy for Hystrix to `SEMAPHORE or disable Hystrix in Feign.
hystrix:
  command:
    default:
      execution:
        isolation:
          strategy: SEMAPHORE
          thread:
            timeoutInMilliseconds: 60000
  shareSecurityContext: true

#请求处理的超时时间
ribbon:
  ReadTimeout: 10000
  ConnectTimeout: 10000

# mybaits-plus配置
mybatis-plus:
  # MyBatis Mapper所对应的XML文件位置
  mapper-locations: classpath*:mapper/**/*.xml
  global-config:
    # 关闭MP3.0自带的banner
    banner: false
    db-config:
      # 主键类型 0:数据库ID自增 1.未定义 2.用户输入 3 id_worker 4.uuid 5.id_worker字符串表示
      id-type: 1
      #字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
      field-strategy: 1
      # 默认数据库表下划线命名
      table-underline: true
      # 逻辑删除配置
      # 逻辑删除全局值（1表示已删除，这也是Mybatis Plus的默认配置）
      logic-delete-value: 1
      # 逻辑未删除全局值（0表示未删除，这也是Mybatis Plus的默认配置）
      logic-not-delete-value: 0
  configuration:
    map-underscore-to-camel-case: true

#mybatis-plus:
#  mapper-locations: classpath*:mapper/**/*.xml
#  #实体扫描，多个package用逗号或者分号分隔
#  typeAliasesPackage: com.xquant.xcrms.modules.*.entity
#  global-config:
#    #主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
#    id-type: 0
#    #序列接口实现类配置
#    key-generator: com.baomidou.mybatisplus.incrementer.OracleKeyGenerator
#    #字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
#    field-strategy: 2
#    #驼峰下划线转换
#    db-column-underline: true
#    #刷新mapper
#    refresh-mapper: true
#    #逻辑删除配置
#   logic-delete-value: -1
#    logic-not-delete-value: 0
#    #自定义SQL注入器
#  #    sql-injector: com.baomidou.mybatisplus.mapper.LogicSqlInjector
#  configuration:
#    map-underscore-to-camel-case: true
#    cache-enabled: false
#    call-setters-on-nulls: true
#    jdbc-type-for-null: 'null'

#swagger公共信息
swagger:
  title: Jud Cloud Swagger API
  description: Spring Cloud微服务开发脚手架
  version: @project.version@
  license: Powered By Jud Cloud
  licenseUrl: https://www.judb.club/
  terms-of-service-url: https://www.judb.club/
  contact:
    name: gavin
    email: gavin@gmail.com
    url: https://www.judb.club/about.html
  authorization:
    name: Judb Cloud OAuth
    auth-regex: ^.*$
    authorization-scope-list:
      - scope: server
        description: server all
    token-url-list:
      - http://jud-cloud-gateway:8000/auth/oauth/token

## spring security 配置
security:
  oauth2:
    client:
      # 默认放行url,如果子模块重写这里的配置就会被覆盖
      ignore-urls:
        - '/actuator/**'
        - '/v2/api-docs'
    resource:
      loadBalanced: true
      token-info-uri: http://jud-cloud-auth/oauth/check_token
